name: Deploy Supervisor

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag (e.g., 2025.05.5)'
        required: true
        default: '2025.05.5'

jobs:
  ding-talk-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4

      - name: Generate DingTalk message
        id: message
        run: |
          timestamp=$(TZ='Asia/Shanghai' date +"%Y-%m-%d %H:%M:%S%:z")
          local_version=$(jq -r '.supervisor' "dev.json")
          message_title="新版本Supervisor-Deploy审批通知"
          message_body+="---------------------------------------\n\n"
          message_body+="#### **📌 部署信息** ** \n\n"
          message_body+="- **环境类型**:[ **DEV(开发环境)** ] \n\n"
          message_body+="- **部署组件**:[ **Supervisor** ] \n\n"
          message_body+="- **当前版本**:[ **$local_version** ] \n\n"
          message_body+="- **部署版本**:[ **[${{ inputs.tag }}](https://github.com/iHost-Open-Source-Project/ha-supervisor/tree/ihost-${{ inputs.tag }})** ] \n\n"
          message_body+="---------------------------------------\n\n"
          message_body+="#### **👤 审批发起信息**  \n\n "
          message_body+="- **发起人**:[**${{ github.event.actor.name || github.actor }}**] \n\n "
          message_body+="- **发起时间**:[**$timestamp**]  \n\n "
          message_body+="#### **🔗 操作入口**   \n\n"
          message_body+="- **✅ 审批链接**：**[点击跳转至审批确认页](https://github.com/iHost-Open-Source-Project/${{ github.repository }}/actions/runs/${{ github.run_id }})**  \n\n"
 
          echo "message_title=$message_title" >> $GITHUB_OUTPUT
          echo "message_body<<EOF" >> $GITHUB_OUTPUT
          echo "$message_body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "message: $message_body"

      - name: Send DingTalk notification
        id: send
        run: |
          message=$(cat <<EOF
          {
            "msgtype": "markdown",
            "markdown": {
              "title": "${{ steps.message.outputs.message_title }}",
              "text": "### ⚙️ **DEV环境Supervisor部署审批申请**  \n\n ${{ steps.message.outputs.message_body }}"
            },
            "at": {
              "isAtAll": true
            }
          }
          EOF
          )

          response=$(curl -s -X POST "${{ secrets.DINGTALK_WEBHOOK }}" \
            -H "Content-Type: application/json" \
            -d "$message")  

  deploy-to-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://github.com/iHost-Open-Source-Project/haos-version/blob/main/dev.json
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ secrets.MOSUXIAO_ACTOR }}
          password: ${{ secrets.MOSUXIAO_TOKEN }}

      - name: Pull the image
        run: |
          docker pull ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:${{ inputs.tag }}

      - name: Update dev.json
        run: |
          # 读取并更新JSON文件
          echo "Updating supervisor version to ${{ inputs.tag }}"
          jq '.supervisor = "${{ inputs.tag }}"' dev.json > dev.tmp.json
          mv dev.tmp.json dev.json

          # 查看更新后的内容
          cat dev.json

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dev.json
          git commit -m "Update supervisor - dev to ${{ inputs.tag }}"
          git push

      - name: Tag the image dev
        run: |
          docker tag ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:${{ inputs.tag }} ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:dev
          docker push ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:dev

  deploy-to-stable:
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    environment:
      name: stable
      url: https://github.com/iHost-Open-Source-Project/haos-version/blob/main/stable.json
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ secrets.MOSUXIAO_ACTOR }}
          password: ${{ secrets.MOSUXIAO_TOKEN }}

      - name: Pull the image
        run: |
          docker pull ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:${{ inputs.tag }}

      - name: Update stable.json
        run: |
          # 读取并更新JSON文件
          echo "Updating supervisor version to ${{ inputs.tag }}"
          jq '.supervisor = "${{ inputs.tag }}"' stable.json > stable.tmp.json
          mv stable.tmp.json stable.json

          # 查看更新后的内容
          cat stable.json

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add stable.json
          git commit -m "Update supervisor - stable to ${{ inputs.tag }}"
          git push

      - name: Tag the image latest & stable
        run: |
          docker tag ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:${{ inputs.tag }} ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:latest
          docker tag ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:${{ inputs.tag }} ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:stable
          docker push ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:latest
          docker push ghcr.io/ihost-open-source-project/armv7-hassio-supervisor:stable
